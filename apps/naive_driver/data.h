uint32_t data1[1024] = {0x00000040,
0x40000000,
0x00000001,
0x00000002,
0x00000003,
0x00000004,
0x00000005,
0x00000006,
0x00000007,
0x00000008,
0x00000009,
0x0000000a,
0x0000000b,
0x0000000c,
0x0000000d,
0x0000000e,
0x0000000f,
0x00000010,
0x00000020,
0x00000030,
0x00000040,
0x00000050,
0x00000060,
0x00000070,
0x00000080,
0x00000090,
0x000000a0,
0x000000b0,
0x000000c0,
0x000000d0,
0x000000e0,
0x000000f0,
0x00000100,
0x00000200,
0x00000300,
0x00000400,
0x00000500,
0x00000600,
0x00000700,
0x00000800,
0x00000900,
0x00000a00,
0x00000b00,
0x00000c00,
0x00000d00,
0x00000e00,
0x00000f00,
0x00001000,
0x00002000,
0x00003000,
0x00004000,
0x00005000,
0x00006000,
0x00007000,
0x00008000,
0x00009000,
0x0000a000,
0x0000b000,
0x0000c000,
0x0000d000,
0x0000e000,
0x0000f000,
0x00000000,
0x00000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x00000000,
0x40000000,
0x40800000,
0x40c00000,
0x41000000,
0x41200000,
0x41400000,
0x41600000,
0x41800000,
0x41900000,
0x41a00000,
0x41b00000,
0x41c00000,
0x41d00000,
0x41e00000,
0x41f00000,
0x42000000,
0x42080000,
0x42100000,
0x42180000,
0x42200000,
0x42280000,
0x42300000,
0x42380000,
0x42400000,
0x42480000,
0x42500000,
0x42580000,
0x42600000,
0x42680000,
0x42700000,
0x42780000,
0x00000000,
0x40000000,
0x40800000,
0x40c00000,
0x41000000,
0x41200000,
0x41400000,
0x41600000,
0x41800000,
0x41900000,
0x41a00000,
0x41b00000,
0x41c00000,
0x41d00000,
0x41e00000,
0x41f00000,
0x42000000,
0x42080000,
0x42100000,
0x42180000,
0x42200000,
0x42280000,
0x42300000,
0x42380000,
0x42400000,
0x42480000,
0x42500000,
0x42580000,
0x42600000,
0x42680000,
0x42700000,
0x42780000,

};

uint32_t data[1024] = {0x00000040,
0x40400000,

0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x00000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x42000000,
0x00000000,
0x40000000,
0x40800000,
0x40c00000,
0x41000000,
0x41200000,
0x41400000,
0x41600000,
0x41800000,
0x41900000,
0x41a00000,
0x41b00000,
0x41c00000,
0x41d00000,
0x41e00000,
0x41f00000,
0x42000000,
0x42080000,
0x42100000,
0x42180000,
0x42200000,
0x42280000,
0x42300000,
0x42380000,
0x42400000,
0x42480000,
0x42500000,
0x42580000,
0x42600000,
0x42680000,
0x42700000,
0x42780000,
0x00000000,
0x40000000,
0x40800000,
0x40c00000,
0x41000000,
0x41200000,
0x41400000,
0x41600000,
0x41800000,
0x41900000,
0x41a00000,
0x41b00000,
0x41c00000,
0x41d00000,
0x41e00000,
0x41f00000,
0x42000000,
0x42080000,
0x42100000,
0x42180000,
0x42200000,
0x42280000,
0x42300000,
0x42380000,
0x42400000,
0x42480000,
0x42500000,
0x42580000,
0x42600000,
0x42680000,
0x42700000,
0x42780000,
};










// uint32_t data[1024] = {
//     // First 32 values: k + 31 zeros (这部分会被写入0x90000000)
//     0x00000003, 0x00000000,// k = 3
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
//     0x00000000, 0x00000000,
//     0x00000000, 0x00000000, 
    
//     // Matrix A (8x8 = 64 float32 values) - 原始矩阵
//     0x3ecccccd, 0xbf666666, 
//     0x3f000000, 0x3f000000,
//     0x3f666666, 0xbdcccccd, 
//     0xbf666666, 0xbf19999a,
//     0x3f000000, 0xbecccccd, 
//     0x00000000, 0x3f19999a,
//     0x3ecccccd, 0xbe99999a, 
//     0xbe99999a, 0xbf333333,
//     0x3f800000, 0xbf000000, 
//     0xbf4ccccd, 0xbe99999a,
//     0x3f800000, 0xbdcccccd, 
//     0x3f19999a, 0x00000000,
//     0xbf333333, 0xbf800000, 
//     0xbf666666, 0x3dcccccd,
//     0x3dcccccd, 0xbe4ccccd, 
//     0x00000000, 0xbf800000,
//     0x3e4ccccd, 0xbe4ccccd, 
//     0xbe4ccccd, 0x3ecccccd,
//     0x3ecccccd, 0x3f666666, 
//     0x00000000, 0x3e4ccccd,
//     0xbe99999a, 0xbe99999a, 
//     0xbf19999a, 0xbecccccd,
//     0x3f000000, 0x3e99999a, 
//     0xbf000000, 0xbf800000,
//     0xbf666666, 0x3e99999a, 
//     0x3f333333, 0x3dcccccd,
//     0xbf19999a, 0x3f4ccccd, 
//     0xbf666666, 0xbf666666,
//     0xbf19999a, 0x3e99999a, 
//     0x3f666666, 0xbf666666,
//     0x3f19999a, 0x3f666666, 
//     0x3e4ccccd, 0x3f19999a,
    
//     // Matrix M (8x8 = 64) - 初始化为与A相同（算法会修改前k行）
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
//     0, 0, 0, 0,
    
//     // Vector B (8 float32 values)
//     0x3eb851ec,  // 0.36
//     0xbfd0a3d7,  // -1.63
//     0xbe2e147b,  // -0.17
//     0x4010a3d7,  // 2.26
//     0x3f19999a,  // 0.6
//     0xbe8a3d71,  // -0.27
//     0x40500000,  // 3.25
//     0xbf8e147b,  // -1.11
    
//     // Rest filled with zeros...
//     0x00000000, 0x00000000, 0x00000000, 0x00000000,
//     // ... (继续填充0直到1024个元素)
// };

// uint32_t data[1024] = {
// 0x00000003,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x00000000,
// 0x3ecccccd,
// 0xbf666666,
// 0x3f000000,
// 0x3f000000,
// 0x3f666666,
// 0xbdcccccd,
// 0xbf666666,
// 0xbf19999a,
// 0x3f000000,
// 0xbecccccd,
// 0x00000000,
// 0x3f19999a,
// 0x3ecccccd,
// 0xbe99999a,
// 0xbe99999a,
// 0xbf333333,
// 0x3f800000,
// 0xbf000000,
// 0xbf4ccccd,
// 0xbe99999a,
// 0x3f800000,
// 0xbdcccccd,
// 0x3f19999a,
// 0x00000000,
// 0xbf333333,
// 0xbf800000,
// 0xbf666666,
// 0x3dcccccd,
// 0x3dcccccd,
// 0xbe4ccccd,
// 0x00000000,
// 0xbf800000,
// 0x3e4ccccd,
// 0xbe4ccccd,
// 0xbe4ccccd,
// 0x3ecccccd,
// 0x3ecccccd,
// 0x3f666666,
// 0x00000000,
// 0x3e4ccccd,
// 0xbe99999a,
// 0xbe99999a,
// 0xbf19999a,
// 0xbecccccd,
// 0x3f000000,
// 0x3e99999a,
// 0xbf000000,
// 0xbf800000,
// 0xbf666666,
// 0x3e99999a,
// 0x3f333333,
// 0x3dcccccd,
// 0xbf19999a,
// 0x3f4ccccd,
// 0xbf666666,
// 0xbf666666,
// 0xbf19999a,
// 0x3e99999a,
// 0x3f666666,
// 0xbf666666,
// 0x3f19999a,
// 0x3f666666,
// 0x3e4ccccd,
// 0x3f19999a,
// 0x3eb851ec,
// 0xbfd0a3d7,
// 0xbe2e147b,
// 0x4010a3d7,
// 0x3f19999a,
// 0xbe8a3d71,
// 0x40500000,
// 0xbf8e147b,
// };


